{"ast":null,"code":"var _jsxFileName = \"/Users/donggunlee/Desktop/CloneBuilder/URP/client/src/Component/Chat/chatbubble.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChatBubble = ({\n  speaker,\n  content,\n  cloneName,\n  image\n}) => {\n  _s();\n  const [isCloneContentVisible, setCloneContentVisible] = useState(false);\n  const [isNotCloneContentVisible, setNotCloneContentVisible] = useState(false);\n  const handleCloneButtonClick = () => {\n    setCloneContentVisible(true);\n    setNotCloneContentVisible(false);\n  };\n  const handleNotCloneButtonClick = () => {\n    setCloneContentVisible(false);\n    setNotCloneContentVisible(true);\n  };\n  const handleSaveClick = () => {\n    setCloneContentVisible(false);\n    setNotCloneContentVisible(false);\n  };\n\n  //props...를 통해 \n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: speaker === \"digital clone\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clonechat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imgAndName\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\" \", cloneName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbubble\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clonebuttoncontainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"isClone\",\n          onClick: handleCloneButtonClick,\n          children: \"\\uB0B4 \\uD074\\uB860\\uC774\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"isNotClone\",\n          onClick: handleNotCloneButtonClick,\n          children: \"\\uB0B4 \\uD074\\uB860 \\uC544\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), isCloneContentVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"additionalContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"additionalText\",\n          children: \"1. How closely does your clone resemble your trait?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confidence-scale\",\n          children: [20, 40, 60, 80, 100].map(value => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setConfidence(value),\n            children: [value, \"%\"]\n          }, value, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"additionalText2\",\n          children: \"2. Enter the reason\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"cloneReason\",\n          placeholder: \"Type here\",\n          value: reason,\n          onChange: e => setReason(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCloneContentVisible(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveClick,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this), isNotCloneContentVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"additionalContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"additionalText\",\n          children: \"Please provide feedback on why it's not your clone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"cloneReason\",\n          placeholder: \"Type your feedback here\",\n          value: reason,\n          onChange: e => setReason(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setNotCloneContentVisible(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveClick,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userchat\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbubble\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(ChatBubble, \"xgPLdBXFaqu9IMLfyawOXPHi9Tg=\");\n_c = ChatBubble;\nvar _c;\n$RefreshReg$(_c, \"ChatBubble\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBubble","speaker","content","cloneName","image","_s","isCloneContentVisible","setCloneContentVisible","isNotCloneContentVisible","setNotCloneContentVisible","handleCloneButtonClick","handleNotCloneButtonClick","handleSaveClick","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","value","setConfidence","placeholder","reason","onChange","e","setReason","target","_c","$RefreshReg$"],"sources":["/Users/donggunlee/Desktop/CloneBuilder/URP/client/src/Component/Chat/chatbubble.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport const ChatBubble = ({ speaker, content, cloneName, image }) => {\n    const [isCloneContentVisible, setCloneContentVisible] = useState(false);\n    const [isNotCloneContentVisible, setNotCloneContentVisible] = useState(false);\n\n\n    const handleCloneButtonClick = () => {\n        setCloneContentVisible(true);\n        setNotCloneContentVisible(false);\n    };\n\n    const handleNotCloneButtonClick = () => {\n        setCloneContentVisible(false);\n        setNotCloneContentVisible(true);\n    };\n\n    const handleSaveClick = () => {\n        setCloneContentVisible(false);\n        setNotCloneContentVisible(false);\n    };\n\n\n    //props...를 통해 \n    return (\n        <>\n            {speaker === \"digital clone\" ?\n                <div className='clonechat'>\n                    <div className='imgAndName'>\n                        <img src= {image} alt='logo' />\n                        <h4> {cloneName} </h4>\n                    </div>\n                    <div className='chatbubble'>{content}</div>\n                    <div className='clonebuttoncontainer'>\n                        <button className='isClone' onClick={handleCloneButtonClick}>내 클론이다</button>\n                        <button className='isNotClone' onClick={handleNotCloneButtonClick}>내 클론 아니다</button>\n                    </div>\n                    {isCloneContentVisible && (\n                        <div className='additionalContent'>\n                            <div className='additionalText'>1. How closely does your clone resemble your trait?</div>\n                            <div className='confidence-scale'>\n                                {[20, 40, 60, 80, 100].map(value => (\n                                    <button key={value} onClick={() => setConfidence(value)}>{value}%</button>\n                                ))}\n                            </div>\n                            <div className='additionalText2'>2. Enter the reason</div>\n                            <textarea\n                                className='cloneReason'\n                                placeholder='Type here'\n                                value={reason}\n                                onChange={e => setReason(e.target.value)}\n                            ></textarea>\n                            <div className='content-buttons'>\n                                <button onClick={() => setCloneContentVisible(false)}>Cancel</button>\n                                <button onClick={handleSaveClick}>Save</button>\n                            </div>\n                        </div>\n                    )}\n                    {isNotCloneContentVisible && (\n                        <div className='additionalContent'>\n                            <div className='additionalText'>Please provide feedback on why it's not your clone</div>\n                            <textarea\n                                className='cloneReason'\n                                placeholder='Type your feedback here'\n                                value={reason}\n                                onChange={e => setReason(e.target.value)}\n                            ></textarea>\n                            <div className='content-buttons'>\n                                <button onClick={() => setNotCloneContentVisible(false)}>Cancel</button>\n                                <button onClick={handleSaveClick}>Submit</button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n                :\n                <div className='userchat'>\n                    <div className='chatbubble'>{content}</div>\n                </div>\n            }\n        </>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}