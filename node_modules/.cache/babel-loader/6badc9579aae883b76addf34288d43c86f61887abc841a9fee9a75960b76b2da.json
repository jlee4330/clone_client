{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import'./Chat.css';import{ChatBubble}from'./chatbubble';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export const Chat=props=>{const[chatlog,setChatlog]=useState(props.chatData);const[feedback,setFeedback]=useState(\"\");const[triggerResponse,setTriggerResponse]=useState(false);const chatEndRef=useRef(null);const{className}=props;const handleFeedbackChange=event=>{setFeedback(event.target.value);};const giveFeedback=()=>{if(feedback!==\"\"){setChatlog([...chatlog,{\"speaker\":\"instructor\",\"content\":feedback}]);setTriggerResponse(true);}};const handleKeyPress=event=>{if(event.key==='Enter'){giveFeedback();}};useEffect(()=>{async function fetchData(){if(triggerResponse){await props.getResponse(feedback);setTriggerResponse(false);// Reset trigger\nsetFeedback(\"\");}}fetchData();},[triggerResponse]);useEffect(()=>{setChatlog(props.chatData);},[props.chatData]);useEffect(()=>{if(chatEndRef.current){chatEndRef.current.scrollIntoView({behavior:'smooth'});}},[chatlog]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"chatUI\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chatWindow\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chatContainer \".concat(className),children:[chatlog.map((chat,index)=>/*#__PURE__*/_jsx(ChatBubble,{logId:chat.logId// logId가 올바르게 설정되어 있는지 확인\n,speaker:chat.speaker,cloneName:props.cloneName,content:chat.content,image:props.profileImageUrl,updateLog:props.updateLog},index)),/*#__PURE__*/_jsx(\"div\",{ref:chatEndRef})]})}),props.names,/*#__PURE__*/_jsxs(\"div\",{className:\"bottombar\",children:[/*#__PURE__*/_jsx(\"input\",{value:feedback,onChange:handleFeedbackChange,onKeyPress:handleKeyPress,placeholder:\"\\uD074\\uB860\\uACFC \\uB300\\uD654\\uD558\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{className:\"chatBtn\",onClick:giveFeedback})]})]})});};","map":{"version":3,"names":["React","useState","useEffect","useRef","ChatBubble","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Chat","props","chatlog","setChatlog","chatData","feedback","setFeedback","triggerResponse","setTriggerResponse","chatEndRef","className","handleFeedbackChange","event","target","value","giveFeedback","handleKeyPress","key","fetchData","getResponse","current","scrollIntoView","behavior","children","concat","map","chat","index","logId","speaker","cloneName","content","image","profileImageUrl","updateLog","ref","names","onChange","onKeyPress","placeholder","onClick"],"sources":["/Users/donggunlee/Desktop/Client/clone_client/src/Component/Chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './Chat.css';\nimport { ChatBubble } from './chatbubble';\n\nexport const Chat = (props) => {\n    const [chatlog, setChatlog] = useState(props.chatData);\n    const [feedback, setFeedback] = useState(\"\");\n    const [triggerResponse, setTriggerResponse] = useState(false);\n    const chatEndRef = useRef(null);\n    const { className } = props;\n\n    const handleFeedbackChange = (event) => {\n        setFeedback(event.target.value);\n    };\n\n    const giveFeedback = () => {\n        if(feedback !== \"\") {\n            setChatlog([...chatlog, {\"speaker\":\"instructor\", \"content\": feedback}]);\n            setTriggerResponse(true);\n        }\n\n\n\n    }\n\n    const handleKeyPress = (event) => {\n        if (event.key === 'Enter') { \n            giveFeedback();\n        }\n    }\n\n    \n\n    useEffect(() => {\n        async function fetchData() {\n            if (triggerResponse) {\n                await props.getResponse(feedback);\n                setTriggerResponse(false); // Reset trigger\n                setFeedback(\"\");\n            }\n        }\n        fetchData();\n    }, [triggerResponse]);\n\n    useEffect(() => {\n        setChatlog(props.chatData);\n    }, [props.chatData]);\n\n\n    useEffect(() => {\n        if (chatEndRef.current) {\n            chatEndRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }, [chatlog]);\n\n\n    return (\n        <>\n            <div className={`chatUI`}>\n                <div className='chatWindow'>\n                    <div className={`chatContainer ${className}`}>\n                        {chatlog.map((chat, index) => (\n                            <ChatBubble\n                                key={index}\n                                logId={chat.logId}  // logId가 올바르게 설정되어 있는지 확인\n                                speaker={chat.speaker}\n                                cloneName={props.cloneName} \n                                content={chat.content}\n                                image={props.profileImageUrl}\n                                updateLog={props.updateLog}\n                            />\n                        ))}\n                        <div ref={chatEndRef} />\n                    </div>\n                </div>\n                {props.names}\n                <div className='bottombar'>\n                    <input value={feedback} onChange={handleFeedbackChange} onKeyPress={handleKeyPress}  placeholder='클론과 대화하기' />\n                    <button className='chatBtn' onClick={giveFeedback} />\n                </div>\n            </div>\n        </>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}