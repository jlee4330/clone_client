{"ast":null,"code":"// import React, {useState, useEffect} from 'react';\n// export const Name = ({prevName,updateName}) => {\n//     const [name,setName] = useState(prevName);\n//     const handleTextChange = (event) => {\n//         setName(event.target.value);\n//         updateName(event.target.value)\n//     }\n//     useEffect(()=> {\n//         setName(prevName)\n//     }, [prevName]);\n//     return(\n//     <input className='nameInput' value={name} onChange={handleTextChange} placeholder={'Name your digital clone'} ></input>\n//     );\n// };\nimport React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const Name=_ref=>{let{prevName,updateName,saveName}=_ref;const[name,setName]=useState(prevName);const handleTextChange=event=>{setName(event.target.value);};const handleSave=()=>{updateName(name);saveName(name);};useEffect(()=>{setName(prevName);},[prevName]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{className:\"nameInput\",value:name,onChange:handleTextChange,placeholder:'디지털 클론의 이름을 입력해 주세요.'}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom\",children:/*#__PURE__*/_jsx(\"button\",{className:\"saveBtn\",onClick:handleSave,children:\"Save\"})})]});};","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Name","_ref","prevName","updateName","saveName","name","setName","handleTextChange","event","target","value","handleSave","children","className","onChange","placeholder","onClick"],"sources":["/Users/donggunlee/Desktop/Client/clone_client/src/Component/Name/Name.js"],"sourcesContent":["// import React, {useState, useEffect} from 'react';\n\n// export const Name = ({prevName,updateName}) => {\n\n//     const [name,setName] = useState(prevName);\n\n//     const handleTextChange = (event) => {\n//         setName(event.target.value);\n//         updateName(event.target.value)\n//     }\n\n//     useEffect(()=> {\n//         setName(prevName)\n//     }, [prevName]);\n\n\n    \n//     return(\n//     <input className='nameInput' value={name} onChange={handleTextChange} placeholder={'Name your digital clone'} ></input>\n//     );\n\n// };\n\nimport React, { useState, useEffect } from 'react';\n\nexport const Name = ({ prevName, updateName, saveName }) => {\n    const [name, setName] = useState(prevName);\n\n    const handleTextChange = (event) => {\n        setName(event.target.value);\n    };\n\n    const handleSave = () => {\n        updateName(name);\n        saveName(name);\n        \n    };\n\n    useEffect(() => {\n        setName(prevName);\n    }, [prevName]);\n\n    return (\n        <div>\n            <input \n                className='nameInput' \n                value={name} \n                onChange={handleTextChange} \n                placeholder={'디지털 클론의 이름을 입력해 주세요.'} \n            />\n\n            <div className='bottom'> \n            <button className='saveBtn' onClick={handleSave}>Save</button>\n            </div>\n            \n        </div>\n    );\n};\n"],"mappings":"AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,MAAO,MAAM,CAAAC,IAAI,CAAGC,IAAA,EAAwC,IAAvC,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,QAAS,CAAC,CAAAH,IAAA,CACnD,KAAM,CAACI,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAACQ,QAAQ,CAAC,CAE1C,KAAM,CAAAK,gBAAgB,CAAIC,KAAK,EAAK,CAChCF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACrBR,UAAU,CAACE,IAAI,CAAC,CAChBD,QAAQ,CAACC,IAAI,CAAC,CAElB,CAAC,CAEDV,SAAS,CAAC,IAAM,CACZW,OAAO,CAACJ,QAAQ,CAAC,CACrB,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd,mBACIH,KAAA,QAAAa,QAAA,eACIf,IAAA,UACIgB,SAAS,CAAC,WAAW,CACrBH,KAAK,CAAEL,IAAK,CACZS,QAAQ,CAAEP,gBAAiB,CAC3BQ,WAAW,CAAE,sBAAuB,CACvC,CAAC,cAEFlB,IAAA,QAAKgB,SAAS,CAAC,QAAQ,CAAAD,QAAA,cACvBf,IAAA,WAAQgB,SAAS,CAAC,SAAS,CAACG,OAAO,CAAEL,UAAW,CAAAC,QAAA,CAAC,MAAI,CAAQ,CAAC,CACzD,CAAC,EAEL,CAAC,CAEd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}