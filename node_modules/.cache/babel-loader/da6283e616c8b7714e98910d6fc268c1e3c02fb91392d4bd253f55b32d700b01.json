{"ast":null,"code":"var _jsxFileName = \"/Users/donggunlee/Desktop/CloneBuilder/URP/client/src/Component/Chat/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Chat.css';\nimport { ChatBubble } from './chatbubble';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Chat = props => {\n  _s();\n  const [chatlog, setChatlog] = useState(props.chatData);\n  const [feedback, setFeedback] = useState(\"\");\n  const [triggerResponse, setTriggerResponse] = useState(false);\n  const handleFeedbackChange = event => {\n    setFeedback(event.target.value);\n  };\n  const giveFeedback = () => {\n    if (feedback !== \"\") {\n      setChatlog([...chatlog, {\n        \"speaker\": \"instructor\",\n        \"content\": feedback\n      }]);\n      setTriggerResponse(true);\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      giveFeedback();\n    }\n  };\n  useEffect(() => {\n    async function fetchData() {\n      if (triggerResponse) {\n        await props.getResponse(feedback);\n        setTriggerResponse(false); // Reset trigger\n        setFeedback(\"\");\n      }\n    }\n    fetchData();\n  }, [triggerResponse]);\n  useEffect(() => {\n    setChatlog(props.chatData);\n  }, [props.chatData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatUI\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatWindow\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatContainer\",\n          children: chatlog.map((chat, index) => /*#__PURE__*/_jsxDEV(ChatBubble, {\n            logId: chat.logId // logId가 올바르게 설정되어 있는지 확인\n            ,\n            speaker: chat.speaker,\n            cloneName: props.cloneName,\n            content: chat.content,\n            image: props.profileImageUrl,\n            updateLog: props.updateLog\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), props.names, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottombar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: feedback,\n          onChange: handleFeedbackChange,\n          onKeyDown: handleKeyPress,\n          placeholder: \"chat with your clone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatBtn\",\n          onClick: giveFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Chat, \"q+yIiGXjASnw6nJIhQ39Id9DdJE=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","ChatBubble","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","props","_s","chatlog","setChatlog","chatData","feedback","setFeedback","triggerResponse","setTriggerResponse","handleFeedbackChange","event","target","value","giveFeedback","handleKeyPress","key","preventDefault","fetchData","getResponse","children","className","map","chat","index","logId","speaker","cloneName","content","image","profileImageUrl","updateLog","fileName","_jsxFileName","lineNumber","columnNumber","names","onChange","onKeyDown","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/donggunlee/Desktop/CloneBuilder/URP/client/src/Component/Chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Chat.css';\nimport { ChatBubble } from './chatbubble';\n\nexport const Chat = (props) => {\n    const [chatlog, setChatlog] = useState(props.chatData);\n    const [feedback, setFeedback] = useState(\"\");\n    const [triggerResponse, setTriggerResponse] = useState(false);\n\n    const handleFeedbackChange = (event) => {\n        setFeedback(event.target.value);\n    };\n\n    const giveFeedback = () => {\n        if(feedback !== \"\") {\n            setChatlog([...chatlog, {\"speaker\":\"instructor\", \"content\": feedback}]);\n            setTriggerResponse(true);\n        }\n    }\n\n    const handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault(); \n            giveFeedback();\n        }\n    }\n\n    \n    useEffect(() => {\n        async function fetchData() {\n            if (triggerResponse) {\n                await props.getResponse(feedback);\n                setTriggerResponse(false); // Reset trigger\n                setFeedback(\"\");\n            }\n        }\n        fetchData();\n    }, [triggerResponse]);\n\n    useEffect(() => {\n        setChatlog(props.chatData);\n    }, [props.chatData]);\n\n    return (\n        <>\n            <div className='chatUI'>\n                <div className='chatWindow'>\n                    <div className='chatContainer'>\n                        {chatlog.map((chat, index) => (\n                            <ChatBubble\n                                key={index}\n                                logId={chat.logId}  // logId가 올바르게 설정되어 있는지 확인\n                                speaker={chat.speaker}\n                                cloneName={props.cloneName} \n                                content={chat.content}\n                                image={props.profileImageUrl}\n                                updateLog={props.updateLog}\n                            />\n                        ))}\n                    </div>\n                </div>\n                {props.names}\n                <div className='bottombar'>\n                    <input value={feedback} onChange={handleFeedbackChange} onKeyDown={handleKeyPress}  placeholder='chat with your clone.' />\n                    <button className='chatBtn' onClick={giveFeedback} />\n                </div>\n            </div>\n        </>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}